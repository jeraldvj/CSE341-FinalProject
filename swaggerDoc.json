{
  "swagger": "2.0",
  "info": {
    "title": "Medical Data",
    "description": "This is an api server for a medical office website.\n",
    "version": "1.0.0"
  },
  "host": "localhost:8080",
  "basePath": "/",
  "schemes": [
    "http"
  ],
  "paths": {
    "/user/{username}": {
      "get": {
        "tags": ["user"],
        "summary": "Get a User",
        "description": "",
        "operationId": "getUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "username that need to be find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["user"],
        "summary": "Updated user",
        "description": "This is to update info for a user",
        "operationId": "updateUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "name that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully modified user"
          },
          "400": {
            "description": "Invalid user supplied"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error occurred"
          }
        }
      },
      "delete": {
        "tags": ["user"],
        "summary": "Delete User",
        "description": "This is to delete a user",
        "operationId": "deleteUser",
        "parameters": [
          {
            "name": "username",
            "in": "path",
            "description": "The name that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted user"
          },
          "400": {
            "description": "Invalid username supplied"
          },
          "404": {
            "description": "User not found"
          },
          "500": {
            "description": "Error occurred"
          }
        }
      }
    },
    "/user": {
      "get": {
        "tags": ["user"],
        "summary": "Get all users",
        "operationId": "getAllUsers",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "Array",
              "$ref": "#/definitions/User"
            }
          },
          "500": {
            "description": "Error occurred"
          }
        }
      },
      "post": {
        "tags": ["user"],
        "summary": "Create user",
        "description": "This is for when a user creates an account",
        "operationId": "createUser",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Credentials"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "A User object",
            "schema": {
              "$ref": "#/definitions/User"
            }
          }
        }
      }
    },
    "/client/{id}": {
      "get": {
        "tags": ["client"],
        "summary": "Get a client by Id",
        "description": "",
        "operationId": "getClientById",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "client ID that need to be find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "ID not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["client"],
        "summary": "Updated Client",
        "description": "This is to update info for a client",
        "operationId": "updateClient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "client that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated client object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully modified client"
          },
          "400": {
            "description": "Invalid client supplied"
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Error occurred"
          }
        }
      },
      "delete": {
        "tags": ["client"],
        "summary": "Delete Client",
        "description": "This is to delete a client",
        "operationId": "deleteClient",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The client that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted client"
          },
          "400": {
            "description": "Invalid client supplied"
          },
          "404": {
            "description": "Client not found"
          },
          "500": {
            "description": "Error occurred"
          }
        }
      }
    },
    "/client": {
      "get": {
        "tags": ["client"],
        "summary": "Get all client",
        "operationId": "getAllClients",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "Array",
              "$ref": "#/definitions/Client"
            }
          },
          "500": {
            "description": "Error occurred"
          }
        }
      },
      "post": {
        "tags": ["client"],
        "summary": "Create a client",
        "description": "This to create a new client",
        "operationId": "createClient",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "A User object",
            "schema": {
              "$ref": "#/definitions/Client"
            }
          }
        }
      }
    },
    "/office/{officeName}": {
      "get": {
        "tags": ["office"],
        "summary": "Get office by name",
        "description": "",
        "operationId": "getOffice",
        "parameters": [
          {
            "name": "officeName",
            "in": "path",
            "description": "office that need to be find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Office not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["office"],
        "summary": "Updated Office",
        "description": "This is to update info for an office",
        "operationId": "updateOffice",
        "parameters": [
          {
            "name": "officeName",
            "in": "path",
            "description": "office that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated office object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Office"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully modified office"
          },
          "400": {
            "description": "Invalid office supplied"
          },
          "404": {
            "description": "Office not found"
          },
          "500": {
            "description": "Error occurred"
          }
        }
      },
      "delete": {
        "tags": ["office"],
        "summary": "Delete Office",
        "description": "This is to delete an office",
        "operationId": "deleteOffice",
        "parameters": [
          {
            "name": "officeName",
            "in": "path",
            "description": "The office that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted office"
          },
          "400": {
            "description": "Invalid office supplied"
          },
          "404": {
            "description": "Office not found"
          },
          "500": {
            "description": "Error occurred"
          }
        }
      }
    },
    "/supplier/{supplierName}": {
      "get": {
        "tags": ["supplier"],
        "summary": "Get supplier by name",
        "description": "",
        "operationId": "getSupplier",
        "parameters": [
          {
            "name": "supplierName",
            "in": "path",
            "description": "supplier that need to be find",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "Supplier not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "put": {
        "tags": ["supplier"],
        "summary": "Updated Supplier",
        "description": "This is to update info for a supplier",
        "operationId": "updateSupplier",
        "parameters": [
          {
            "name": "supplierName",
            "in": "path",
            "description": "supplier that need to be updated",
            "required": true,
            "type": "string"
          },
          {
            "in": "body",
            "name": "body",
            "description": "Updated supplier object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        ],
        "responses": {
          "204": {
            "description": "Successfully modified supplier"
          },
          "400": {
            "description": "Invalid supplier supplied"
          },
          "404": {
            "description": "Supplier not found"
          },
          "500": {
            "description": "Error occurred"
          }
        }
      },
      "delete": {
        "tags": ["supplier"],
        "summary": "Delete Supplier",
        "description": "This is to delete a supplier",
        "operationId": "deleteSupplier",
        "parameters": [
          {
            "name": "supplierName",
            "in": "path",
            "description": "The supplier that needs to be deleted",
            "required": true,
            "type": "string"
          }
        ],
        "responses": {
          "200": {
            "description": "Successfully deleted supplier"
          },
          "400": {
            "description": "Invalid supplier supplied"
          },
          "404": {
            "description": "Supplier not found"
          },
          "500": {
            "description": "Error occurred"
          }
        }
      }
    },
    "/office": {
      "get": {
        "tags": ["office"],
        "summary": "Get all office",
        "operationId": "getAllOffice",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "Array",
              "$ref": "#/definitions/Office"
            }
          },
          "404": {
            "description": "Status not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["office"],
        "summary": "Create office",
        "description": "This is to create an office",
        "operationId": "createOffice",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created user object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Office"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "A Office object",
            "schema": {
              "$ref": "#/definitions/Office"
            }
          }
        }
      }
    },
    "/supplier": {
      "get": {
        "tags": ["supplier"],
        "summary": "Get all supplier",
        "operationId": "getAllSupplier",
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "Array",
              "$ref": "#/definitions/Supplier"
            }
          },
          "404": {
            "description": "Status not found"
          },
          "500": {
            "description": "Internal Server Error"
          }
        }
      },
      "post": {
        "tags": ["supplier"],
        "summary": "Create a supplier",
        "description": "This is to create a supplier",
        "operationId": "createSupplier",
        "produces": ["application/json"],
        "parameters": [
          {
            "in": "body",
            "name": "body",
            "description": "Created supplier object",
            "required": true,
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        ],
        "responses": {
          "default": {
            "description": "A Supplier object",
            "schema": {
              "$ref": "#/definitions/Supplier"
            }
          }
        }
      }
    }
  },
  "securityDefinitions": {
    "petstore_auth": {
      "type": "oauth2",
      "authorizationUrl": "http://petstore.swagger.io/oauth/dialog",
      "flow": "implicit",
      "scopes": {
        "write:pets": "modify pets in your account",
        "read:pets": "read your pets"
      }
    }
  },
  "definitions": {
    "User": {
      "type": "object",
      "required": ["password", "username"],
      "properties": {
        "_id": {
          "type": "integer",
          "format": "string"
        },
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        },
        "name": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "specialty": {
          "type": "string"
        },
        "profile": {
          "$ref": "#/definitions/User_profile"
        }
      }
    },
    "Client": {
      "type": "object",
      "required": ["name", "lastName", "email", "status"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "name": {
          "type": "string"
        },
        "lastName": {
          "type": "string"
        },
        "email": {
          "type": "string"
        },
        "phoneNumber": {
          "type": "string"
        },
        "birthday": {
          "type": "string"
        },
        "profilePicture": {
          "type": "string"
        },
        "status": {
          "type": "string"
        },
        "procedureHistory": {
          "type": "array",
          "items": {
          "$ref": "#/definitions/Client_procedureHistory"
          }
        }
      }
    },
    "Office": {
      "type": "object",
      "required": ["officeName", "ubication", "inventory"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "officeName": {
          "type": "string"
        },
        "inventory": {
          "type": "string"
        },
        "order": {
        "type": "array",
        "items": {
          "$ref": "#/definitions/Office_order"
          }
        }
      }
    },
    "Supplier": {
      "type": "object",
      "required": ["officeName", "ubication", "inventory"],
      "properties": {
        "id": {
          "type": "integer",
          "format": "int64"
        },
        "supplierName": {
          "type": "string"
        },
        "products": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/Supplier_products"
          }
        }
      }
    },
    "Credentials": {
      "type": "object",
      "required": ["password", "username"],
      "properties": {
        "username": {
          "type": "string"
        },
        "password": {
          "type": "string"
        }
      }
    },
    "User_profile_experience": {
      "type": "object",
      "properties": {
        "jobTitle": {
          "type": "string"
        },
        "jobDescription": {
          "type": "string"
        },
        "dateStart": {
          "type": "string"
        },
        "dateEnd": {
          "type": "string"
        },
        "company": {
          "type": "string"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "User_profile_education": {
      "type": "object",
      "properties": {
        "institution": {
          "type": "string"
        },
        "programTitle": {
          "type": "string"
        },
        "programDescription": {
          "type": "string"
        },
        "dateStart": {
          "type": "string"
        },
        "dateEnd": {
          "type": "string"
        },
        "completed": {
          "type": "boolean"
        },
        "location": {
          "type": "string"
        }
      }
    },
    "User_profile_references": {
      "type": "object",
      "properties": {
        "name": {
          "type": "string"
        },
        "relationship": {
          "type": "string"
        },
        "contactInfo": {
          "type": "string"
        },
        "yearsKnown": {
          "type": "integer",
          "format": "int32"
        },
        "knownFromWhere": {
          "type": "string"
        }
      }
    },
    "User_profile": {
      "type": "object",
      "properties": {
        "experience": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User_profile_experience"
          }
        },
        "education": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User_profile_education"
          }
        },
        "references": {
          "type": "array",
          "items": {
            "$ref": "#/definitions/User_profile_references"
          }
        }
      }
    },
    "Office_order": {
      "type": "object",
      "properties": {
        "orderId": {
          "type": "string"
        },
        "orderName": {
          "type": "string"
        },
        "description": {
          "type": "string"
        }
      }
    },
    "Supplier_products": {
      "type": "object",
      "properties": {
        "productName": {
          "type": "string"
        },
        "productPicture": {
          "type": "string"
        },
        "cost": {
          "type": "number"
        }
      }
    },
    "Client_procedureHistory": {
      "type": "object",
      "properties": {
        "procedureName": {
          "type": "string"
        },
        "picture": {
          "type": "string"
        },
        "materialUsed": {
          "type": "string"
        }
      }
    }
  }
}